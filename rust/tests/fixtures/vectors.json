[
  {
    "id": "9e1c5c473be1f5bba203615f4525d18093ba349dcf1945891f6d0f7d97b86865",
    "vector_fields": {
      "signature": "# [doc = \" A 2D point\"] pub struct Point { # [doc = \" x coordinate\"] pub x : i32 , # [doc = \" y coordinate\"] pub y : i32 , }",
      "identifiers": "doc Point x i32 y",
      "code_body": "struct Point { pub x: i32, pub y: i32, }",
      "doc_comment": " A 2D point"
    },
    "payload": {
      "repo_id": "test/repo",
      "path": "point.rs",
      "kind": "struct",
      "qual_symbol": "crate::point::Point",
      "start_line": 4,
      "end_line": 9,
      "text": "struct Point {\n    /// x coordinate\n    pub x: i32,\n    /// y coordinate\n    pub y: i32,\n}"
    }
  },
  {
    "id": "9e1c5c473be1f5bba203615f4525d18093ba349dcf1945891f6d0f7d97b86865",
    "vector_fields": {
      "signature": "impl Point",
      "identifiers": "doc Point new x i32 y Self sum self",
      "code_body": "impl Point { pub fn new(x: i32, y: i32) -> Self { Self { x, y } } pub fn sum(&self) -> i32 { self.x + self.y } }",
      "doc_comment": " Operations on `Point`"
    },
    "payload": {
      "repo_id": "test/repo",
      "path": "point.rs",
      "kind": "impl",
      "qual_symbol": "crate::point::Point",
      "start_line": 11,
      "end_line": 22,
      "text": "impl Point {\n    /// Create a new Point\n    pub fn new(x: i32, y: i32) -> Self {\n        Self { x, y }\n    }\n\n    /// Sum coordinates\n    pub fn sum(&self) -> i32 {\n        self.x + self.y\n    }\n}"
    }
  },
  {
    "id": "46b11916ccff0a12a02bf7ef952cc072878a5593759a088eb10199450f5ea7a9",
    "vector_fields": {
      "signature": "fn new (x : i32 , y : i32) -> Self",
      "identifiers": "doc new x i32 y Self",
      "code_body": "{ Self { x , y } }",
      "doc_comment": " Create a new Point"
    },
    "payload": {
      "repo_id": "test/repo",
      "path": "point.rs",
      "kind": "fn",
      "qual_symbol": "crate::point::Point::new",
      "start_line": 13,
      "end_line": 16,
      "text": "# [doc = \" Create a new Point\"] pub fn new (x : i32 , y : i32) -> Self { Self { x , y } }"
    }
  },
  {
    "id": "fb40224d13648b0585d6c5988d50ca598d40aa4dd604a98f011fd07a6964349a",
    "vector_fields": {
      "signature": "fn sum (& self) -> i32",
      "identifiers": "doc sum Self i32 self x y",
      "code_body": "{ self . x + self . y }",
      "doc_comment": " Sum coordinates"
    },
    "payload": {
      "repo_id": "test/repo",
      "path": "point.rs",
      "kind": "fn",
      "qual_symbol": "crate::point::Point::sum",
      "start_line": 18,
      "end_line": 21,
      "text": "# [doc = \" Sum coordinates\"] pub fn sum (& self) -> i32 { self . x + self . y }"
    }
  },
  {
    "id": "95d9811565f0691e1368ea4bf9322fa9719b1ff3d2629dd887ed9423f4666798",
    "vector_fields": {
      "signature": "fn origin () -> Point",
      "identifiers": "doc origin Point x y",
      "code_body": "{ Point { x : 0 , y : 0 } }",
      "doc_comment": " Free function example"
    },
    "payload": {
      "repo_id": "test/repo",
      "path": "point.rs",
      "kind": "fn",
      "qual_symbol": "crate::point::origin",
      "start_line": 24,
      "end_line": 27,
      "text": "# [doc = \" Free function example\"] pub fn origin () -> Point { Point { x : 0 , y : 0 } }"
    }
  }
]
